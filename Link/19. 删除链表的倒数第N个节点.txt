19. 删除链表的倒数第N个节点
给定一个链表，删除链表的倒数第 n 个节点，并且返回链表的头结点。

示例：

给定一个链表: 1->2->3->4->5, 和 n = 2.

当删除了倒数第二个节点后，链表变为 1->2->3->5.

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(head == NULL)
        {
            return NULL;
        }
        if(n == 0)
        {
            return head;
        }
        //快慢指针
        ListNode* fast = head;
        ListNode* slow = head;

        for(int i = 0; i < n;i++)
        {
            fast = fast->next;

            if(fast == NULL)//这个判断必须加上
            {
                return head->next; // 删除的是头结点
            } 
        }
        //此时fast是3

        while(fast->next != NULL)
        {
            fast = fast->next;
            slow = slow->next;
        }
        
        //此时fast是5，slow是3
        slow->next = slow->next->next;

        return head;
    }
};