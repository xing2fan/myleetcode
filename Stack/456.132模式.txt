456. 132模式

给定一个整数序列：a1, a2, ..., an，一个132模式的子序列 ai, aj, ak 被定义为：当 i < j < k 时，ai < ak < aj。
设计一个算法，当给定有 n 个数字的序列时，验证这个序列中是否含有132模式的子序列。
注意：n 的值小于15000。
示例1:

输入: [1, 2, 3, 4]
输出: False
解释: 序列中不存在132模式的子序列。

思路：
用栈存放最大的元素，次大的元素用third存放，遍历方式从后往前。若找到比third小的元素则说明存在132模式。

class Solution {
public:
    bool find132pattern(vector<int>& nums) {
        if(nums.size() < 3) 
		{
			return false;
		}
		
        stack<int> max;
		
        int third = INT_MIN;//初始化不能为0，因为要进行比较，初始化为0会出错。
		
        for(int i = nums.size()-1;i >= 0;i--)
        {
            if(nums[i] < third) 
			{
				return true;
			}
            while(!max.empty() && nums[i]>max.top())//若找到比栈中还大的元素，则更新
            {
                third = max.top();
                max.pop();
            }
            max.push(nums[i]);
        }
        return false;
    }
};

